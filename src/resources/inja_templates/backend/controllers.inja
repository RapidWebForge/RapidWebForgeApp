const { {{ name }} } = require('../models'); // Importa los modelos

// Crear un nuevo {{ name }}
exports.create{{ name }} = async (req, res) => {
  try {
    const { {% for field in fields %} {{ field.name }} {% if loop.is_last %}{% else %},{% endif %} {% endfor %} } = req.body;

    const {{ nameConst }} = await {{ name }}.create(
      { {% for field in fields %} {{ field.name }} {% if loop.is_last %} {% else %}, {% endif %} {% endfor %} }, 
    );

    res.status(201).json({{ nameConst }});
  } catch (error) {
    res.status(400).json({ error: error.message });
  }
};

// Obtener todos los {{ name }}
exports.getAll{{ name }} = async (req, res) => {
  try {
    const {{ nameConst }}List = await {{ name }}.findAll();
    res.json({{ nameConst }}List);
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
};

// Obtener un {{ name }} por ID
exports.get{{ name }}ById = async (req, res) => {
  try {
    const {{ nameConst }} = await {{ name }}.findByPk(req.params.id);
    if ({{ nameConst }}) {
      res.json({{ nameConst }});
    } else {
      res.status(404).json({ error: '{{ name }} not found' });
    }
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
};

// Actualizar un {{ name }} por ID
exports.update{{ name }}ById = async (req, res) => {
  try {
    const { {% for field in fields %} {{ field.name }} {% if loop.is_last %} {% else %}, {% endif %} {% endfor %} } = req.body;
    const {{ nameConst }} = await {{ name }}.findByPk(req.params.id);
    if ({{ nameConst }}) {
      {% for field in fields %}
        {{ nameConst }}.{{ field.name }} = {{ field.name }};
      {% endfor %} 
      await {{ nameConst }}.save();
      res.json({{ nameConst }});
    } else {
      res.status(404).json({ error: '{{ name }} not found' });
    }
  } catch (error) {
    res.status(400).json({ error: error.message });
  }
};

// Eliminar un {{ name }} por ID
exports.delete{{ name }}ById = async (req, res) => {
  try {
    const {{ nameConst }} = await {{ name }}.findByPk(req.params.id);
    if ({{ nameConst }}) {
      await {{ nameConst }}.destroy();
      res.json({ message: '{{ name }} deleted' });
    } else {
      res.status(404).json({ error: '{{ name }} not found' });
    }
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
};
